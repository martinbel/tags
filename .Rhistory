i = 1
j = 1
file_name <- '/Users/mbtangotan/Desktop/dm/free/tags/muestra.csv'
con <- file(file_name, "r")
i = 1
j = 1
file_name <- '/Users/mbtangotan/Desktop/dm/free/tags/muestra.csv'
#file_name <- '/Users/mbtangotan/Desktop/dm/free/tags/Posts.xml.csv'
con <- file(file_name, "r")
while (length(oneLine <- readLines(con, n = 1)) > 0) {
row <- grep('<.>', as.character(oneLine), value=TRUE)
if(length(row) != 0){
if(nchar(row) > 100){
try(write.table(row, file='out.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
if( (i %% 10000) == 0) {
print(sprintf("iter: %s tot_row: %s", i, j))
}
i = i + 1
}
}
j = j + 1
}
rm(list = ls(all = TRUE)); gc()
out_df <- data.frame(text="0")
write.table(out_df, file='out.csv', append=F, col.names = T, row.names=F, sep='|')
i = 1
j = 1
file_name <- '/Users/mbtangotan/Desktop/dm/free/tags/muestra.csv'
#file_name <- '/Users/mbtangotan/Desktop/dm/free/tags/Posts.xml.csv'
con <- file(file_name, "r")
while (length(oneLine <- readLines(con, n = 1)) > 0) {
row <- grep('<.*>', as.character(oneLine), value=TRUE)
if(length(row) != 0){
if(nchar(row) > 100){
try(write.table(row, file='out.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
if( (i %% 10000) == 0) {
print(sprintf("iter: %s tot_row: %s", i, j))
}
i = i + 1
}
}
j = j + 1
}
close(con)
library(data.table)
library(plyr)
data <- readLines('out.csv')
split_data <- lapply(seq_along(data), function(x){
do.call(rbind, strsplit(data[x], '\t'))
})
split_data[1]
split_data[2]
split_data[[1]]
split_data[[2]]
split_data[[3]]
split_data[[4]]
split_data[[1]]
split_data[[1]]
d <- ldply(split_data, 'rbind')
dim(d)
head
head(d)
q_char <- sapply(split_data, nchar)
quantile(q_char)
head(q_char)
q_char <- sapply(split_data, length)
q_char
head(q_char)
sum(q_char < 10)
which(q_char == 21)
d1 <- d[which(q_char == 21), c(12, 3, 11)]
gc()
head(d1)
q_char
head(d1)
d[1,]
d[3,]
data[1]
data[3]
rm(d)
gc()
rm(d1)
rm(split_data)
gc()
rm(list = ls(all = TRUE)); gc()
pkg = c("data.table", "plyr", "tm", "e1071", "Matrix")
sapply(pkg, require, c=T)
source('funs.R')
### First run cut_script.sh
# system("sh cut_script.sh")
tags <- readLines('tags.csv')
q_char_tags <- nchar(tags)
keep_tags <- which(q_char_tags > 0)
tags <- tags[keep_tags]
write.table(data.frame(tags=tags, keep_tags=keep_tags), file='keep_tags.csv',
row.names=FALSE, sep='|')
### read tags and tags index
tags <- fread('keep_tags.csv', sep='|')
tags[, tag:=as.numeric(tags)]
tags <- tags[is.na(tag)]
### Keep first tag
tags[, first_tag:=gsub(">.*", ">", tags)]
q_tags <- tags[, .N, by='first_tag']
### Select 20 most common tags
top_tags <- q_tags[order(-N)][1:20]$first_tag
tags[, keep_top:=ifelse(first_tag %in% top_tags, 1, 0)]
### Tags result
tags <- tags[, list(tag=first_tag, keep_top, keep_tags)]
tags <- tags[keep_top == 1]
top_tags_index <- tags[, list(keep_tags)]$keep_tags
head(top_tags_index)
tail(top_tags_index)
i = 1; j = 1
file_name <- '../data/body.csv'
con <- file(file_name, "r")
file_name <- '../tags/data/body.csv'
con <- file(file_name, "r")
con
row <- readLines(con, n = 1)
row
length(row <- readLines(con, n = 1)) > 0)
length(row <- readLines(con, n = 1)) > 0
i = 1
i = 1
i %in% top_tags_index
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
try(write.table(row, file='out.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
if( (i %% 50000) == 0) {
print(sprintf("iter: %s tot_row: %s", i, j))
}
i = i + 1
}
}
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
try(write.table(row, file='out.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
if( (i %% 50000) == 0) {
print(sprintf("iter: %s tot_row: %s", i))
print('body:')
print(row)
}
i = i + 1
}
}
out_df <- data.frame(text="0")
write.table(out_df, file='keep_body.csv', append=F, col.names = T, row.names=F, sep='|')
file_name <- '../tags/data/body.csv'
con <- file(file_name, "r")
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
try(write.table(row, file='out.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
if( (i %% 10000) == 0) {
print(sprintf("iter: %s tot_row: %s", i))
print('body:')
print(row)
gc()
}
i = i + 1
}
}
out_df <- data.frame(text="0")
write.table(out_df, file='keep_body.csv', append=F, col.names = T, row.names=F, sep='|')
file_name <- '../tags/data/body.csv'
con <- file(file_name, "r")
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
try(write.table(row, file='keep_body.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
if( (i %% 10000) == 0) {
print(sprintf("iter: %s tot_row: %s", i))
print('body:')
print(row)
gc()
}
i = i + 1
}
}
gc()
out_df <- data.frame(text="0")
write.table(out_df, file='keep_body.csv', append=F, col.names = T, row.names=F, sep='|')
file_name <- '../tags/data/body.csv'
con <- file(file_name, "r")
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
# write row with tag in file
try(write.table(row, file='keep_body.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
# print progress
if( (i %% 10000) == 0) {
print(sprintf("iter: %s tot_row: %s", i))
print('body:')
print(row)
gc()
}
}
i = i + 1
}
out_df <- data.frame(text="0")
write.table(out_df, file='keep_body.csv', append=F, col.names = T, row.names=F, sep='|')
file_name <- '../tags/data/body.csv'
con <- file(file_name, "r")
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
# write row with tag in file
try(write.table(row, file='keep_body.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
# print progress
if( (i %% 10000) == 0) {
print(sprintf("iter: %s", i))
print('body:')
print(row)
gc()
}
}
i = i + 1
}
}
top_tags_index
top_tags_index
top_tags_indx
top_tags_index
out_df <- data.frame(text="0")
write.table(out_df, file='keep_body.csv', append=F, col.names = T, row.names=F, sep='|')
file_name <- '../tags/data/body.csv'
con <- file(file_name, "r")
i = 1
while (length(row <- readLines(con, n = 1)) > 0) {
if(i %in% top_tags_index){
# write row with tag in file
try(write.table(row, file='keep_body.csv', append=T, row.names=F,
col.names = F, sep='|'), silent=T)
# print progress
if( (i %% 100) == 0) {
print(sprintf("iter: %s", i))
print('body:')
print(row)
gc()
}
}
i = i + 1
}
?read.csv
